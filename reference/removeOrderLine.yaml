openapi: 3.0.0
info:
  title: Cart Service
  description: Cart Service API Description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    CartIdentity:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    AddToCartDto:
      type: object
      properties:
        sku:
          type: string
          description: Product SKU
        quantity:
          type: number
          default: 1
        selectPromotionId:
          type: number
      required:
        - sku
    ProductPrice:
      type: object
      properties:
        sellPrice:
          type: number
        supplierRetailPrice:
          type: number
      required:
        - sellPrice
        - supplierRetailPrice
    Seller:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        displayName:
          type: string
      required:
        - id
        - name
        - displayName
    Tax:
      type: object
      properties:
        taxOut:
          type: number
        taxOutCode:
          type: string
      required:
        - taxOut
        - taxOutCode
    Warranty:
      type: object
      properties:
        months:
          type: number
        description:
          type: string
      required:
        - months
        - description
    ProductInfo:
      type: object
      properties:
        sku:
          type: string
        name:
          type: string
        seller:
          $ref: '#/components/schemas/Seller'
        imageUrl:
          type: string
        tax:
          $ref: '#/components/schemas/Tax'
        warranty:
          $ref: '#/components/schemas/Warranty'
      required:
        - sku
        - name
        - seller
        - imageUrl
        - tax
        - warranty
    Provider:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        logo:
          type: string
        slogan:
          type: string
      required:
        - id
        - name
        - logo
        - slogan
    Product:
      type: object
      properties:
        prices:
          type: array
          items:
            $ref: '#/components/schemas/ProductPrice'
        productInfo:
          $ref: '#/components/schemas/ProductInfo'
        totalAvailable:
          type: number
        provider:
          $ref: '#/components/schemas/Provider'
      required:
        - prices
        - productInfo
        - totalAvailable
        - provider
    BaseDefinition:
      type: object
      properties: {}
    OrderLineItem:
      type: object
      properties:
        id:
          type: string
        product:
          $ref: '#/components/schemas/Product'
        expectedPromotion:
          $ref: '#/components/schemas/BaseDefinition'
        addedAt:
          format: date-time
          type: string
        bizType:
          type: string
        displayName:
          type: string
        lineItemId:
          type: string
        name:
          type: string
        parentId:
          type: string
        parentSku:
          type: string
        price:
          type: number
        quantity:
          type: number
        reasonAdd:
          type: string
        reasonDiscount:
          type: string
        rowTotal:
          type: number
        salePoint:
          type: number
        sellerId:
          type: number
        sku:
          type: string
        unitAdd:
          type: number
        unitDiscount:
          type: number
        unitPrice:
          type: number
        unitPriceBeforeTax:
          type: number
        vatRate:
          type: number
        isGift:
          type: boolean
        isSelected:
          type: boolean
      required:
        - id
        - product
        - expectedPromotion
        - bizType
        - lineItemId
        - name
        - price
        - quantity
        - reasonAdd
        - reasonDiscount
        - rowTotal
        - salePoint
        - sellerId
        - sku
        - unitAdd
        - unitDiscount
        - unitPrice
        - unitPriceBeforeTax
        - vatRate
        - isGift
        - isSelected
    ShippingAddress:
      type: object
      properties:
        wardCode:
          type: string
        districtCode:
          type: string
        provinceCode:
          type: string
        wardName:
          type: string
        districtName:
          type: string
        provinceName:
          type: string
        address:
          type: string
        name:
          type: string
        email:
          type: string
        telephone:
          type: string
        longitude:
          type: string
        latitude:
          type: string
        addressNote:
          type: string
      required:
        - wardCode
        - districtCode
        - provinceCode
        - wardName
        - districtName
        - provinceName
        - address
        - name
        - email
        - telephone
        - longitude
        - latitude
        - addressNote
    BaseFlashSale:
      type: object
      properties:
        discountPercent:
          type: number
        endTimestampSec:
          format: date-time
          type: string
        id:
          type: number
        sellerId:
          type: number
        startTimestampSec:
          format: date-time
          type: string
        totalCount:
          type: number
        usedCount:
          type: number
      required:
        - discountPercent
        - endTimestampSec
        - id
        - sellerId
        - startTimestampSec
        - totalCount
        - usedCount
    Voucher:
      type: object
      properties:
        quantity:
          type: number
      required:
        - quantity
    OrderPromotion:
      type: object
      properties:
        applyOn:
          type: array
          items:
            type: string
        applyType:
          type: string
        baseFlashSale:
          $ref: '#/components/schemas/BaseFlashSale'
        basePromotion:
          $ref: '#/components/schemas/BaseDefinition'
        coupon:
          type: string
        discount:
          type: number
        gifts:
          type: array
          items:
            type: string
        id:
          type: number
        promotionId:
          type: string
        quantity:
          type: number
        sellerId:
          type: number
        type:
          type: string
        voucher:
          $ref: '#/components/schemas/Voucher'
        isSelected:
          type: boolean
      required:
        - applyOn
        - applyType
        - discount
        - gifts
        - id
        - promotionId
        - quantity
        - sellerId
        - type
        - isSelected
    OrderCoupons:
      type: object
      properties:
        applicableCoupons:
          type: array
          items:
            $ref: '#/components/schemas/BaseDefinition'
        inapplicableCoupons:
          type: array
          items:
            $ref: '#/components/schemas/BaseDefinition'
      required:
        - applicableCoupons
        - inapplicableCoupons
    Cart:
      type: object
      properties:
        grandTotal:
          type: number
        subTotal:
          type: number
        totalDiscount:
          type: number
        preCalculatedPoints:
          type: number
        shippingFee:
          type: number
        orderLines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItem'
        invalidPromotions:
          type: array
          items:
            $ref: '#/components/schemas/OrderPromotion'
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/OrderPromotion'
        orderCoupons:
          $ref: '#/components/schemas/OrderCoupons'
        issues:
          type: array
          items:
            type: string
      required:
        - grandTotal
        - subTotal
        - totalDiscount
        - preCalculatedPoints
        - shippingFee
        - orderLines
        - invalidPromotions
        - promotions
        - orderCoupons
        - issues
    PaymentMethodMerchantMethodCode:
      type: object
      properties:
        merchantMethodCode:
          type: string
        discountCodes:
          type: array
          items:
            type: string
      required:
        - merchantMethodCode
        - discountCodes
    PaymentMethod:
      type: object
      properties:
        partnerCode:
          type: string
        methodCode:
          type: string
        payType:
          type: string
        merchantMethodCodes:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethodMerchantMethodCode'
      required:
        - partnerCode
        - methodCode
        - payType
        - merchantMethodCodes
    PaymentMethodsResponse:
      type: object
      properties:
        merchantCode:
          type: string
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
      required:
        - merchantCode
        - paymentMethods
    UpdateOrderLineDto:
      type: object
      properties:
        quantity:
          type: number
          description: Client can update order line quantity by sending quantity field
        selected:
          type: boolean
          description: Send selected field as true or false to indicate the order line is selected or not
    CheckCouponDto:
      type: object
      properties:
        coupon:
          type: string
      required:
        - coupon
    InvoiceInfo:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        taxCode:
          type: string
        address:
          type: string
      required:
        - name
        - email
        - phone
        - taxCode
        - address
    SellerNote:
      type: object
      properties:
        sellerId:
          type: number
        value:
          type: string
      required:
        - sellerId
        - value
    CustomerInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        fullAddress:
          type: string
        wardId:
          type: string
        districtId:
          type: string
        provinceId:
          type: string
        asiaCrmId:
          type: string
      required:
        - id
        - name
        - fullAddress
    ShippingInfo:
      type: object
      properties:
        storeCode:
          type: string
        expectedDate:
          type: string
    CheckoutDto:
      type: object
      properties:
        isDelivery:
          type: boolean
        invoiceInfo:
          $ref: '#/components/schemas/InvoiceInfo'
        referralCode:
          type: string
        notes:
          type: array
          items:
            $ref: '#/components/schemas/SellerNote'
        customer:
          $ref: '#/components/schemas/CustomerInfo'
        shippingInfo:
          $ref: '#/components/schemas/ShippingInfo'
        channelType:
          type: string
        channelId:
          type: number
      required:
        - customer
        - shippingInfo
        - channelType
        - channelId
    Order:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        state:
          type: number
        childOrders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      required:
        - id
        - code
        - state
        - childOrders
paths:
  '/api/v1/cart/order-lines/{orderLineId}':
    delete:
      operationId: CartController_removeOrderLine
      summary: Remove order line from cart
      parameters:
        - name: orderLineId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Delete order line successfully
        '201':
          description: Created
        '412':
          description: AddToCart Error Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        '@type':
                          type: string
                        message:
                          type: string
              examples:
                Sản phẩm không tồn tại hoặc đã ngưng bán:
                  value:
                    code: 412
                    message: Sản phẩm không tồn tại trong giỏ hàng
                    details:
                      - '@type': rpc.tekoapis.com/cart.v1.OrderLineNotFound
                        message: Sản phẩm không tồn tại trong giỏ hàng
      tags:
        - Cart management
      description: ''
